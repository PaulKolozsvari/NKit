*	Quickstart: Create and publish a package using Visual Studio (.NET Framework, Windows)
	-	https://docs.microsoft.com/en-us/nuget/quickstart/create-and-publish-a-package-using-visual-studio-net-framework
		
		*	Install the nuget.exe CLI by downloading it from nuget.org, saving that .exe file to a suitable folder, and adding that folder to your PATH environment variable.
			Download the NuGet CLI from:
				-	https://dist.nuget.org/win-x86-commandline/latest/nuget.exe

		1.	Set the asembly properties in the project settings.
		2.	Switch to Release build configuration.
		3.	Create a nuget spec file which will contain all the information about publishing a package.
			You run nuget spec only once to generate the initial manifest. When updating the package, you either 
			change values in your project or edit the manifest directly.
			-	Open a command prompt and navigate to the project folder containing .csproj file.
			-	nuget spec NKit.Windows.Standalone.csproj
		5.	Edit the .nuspec file with information such as the project URL etc.
		6.	Package the NuGet Package: From a command prompt in the folder containing your .nuspec file, run the command
			-	nuget pack
		4.	Login to NuGet and create an Key (if you don't have one already): https://www.nuget.org/account/apikeys
			-	NuGet API Key: oy2jrak37o4ba6wbdgcanvuf2qyqyhgu5epmplqckqgxja
			-	Open a command prompt and change directory to the folder where the nupkg file has been created.
			-	Run the following command and just replacing the key with your own key:
					dotnet nuget push NKit.Windows.Standalone.1.3.3.nupkg -k oy2lryqu75ui4d3utfdahl2ztqjtw6oufkn5mrx3dl2fke -s https://api.nuget.org/v3/index.json
		6.	Publish the package with Nuget Push:
			-	Open a command prompt and change directory to the folder where the nupkg file has been created.
			-	Run the following command and just replacing the key with your own key:
					nuget push NKit.Windows.Standalone.1.3.4.nupkg oy2lryqu75ui4d3utfdahl2ztqjtw6oufkn5mrx3dl2fke -Source https://api.nuget.org/v3/index.json